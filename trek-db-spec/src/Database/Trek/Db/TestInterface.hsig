signature Database.Trek.Db.TestInterface where
import Data.List.NonEmpty (NonEmpty)
import Database.Trek.Db.TestInterface.Types
import Database.Trek.Db.Interface

data WorldState

instance Eq WorldState
instance Show WorldState

-- InputMigration accessors
inputVersion   :: InputMigration -> Version
-- inputAction    :: InputMigration -> IO (DB ())
-- or we come up with idepotemt withFile MonadMask
inputAction    :: InputMigration -> DB ()

data InputMigration

inputGroup :: NonEmpty InputMigration -> DB InputGroup

extraMigrations :: NonEmpty InputMigration
migrations :: NonEmpty InputMigration
conflictingMigrations :: NonEmpty InputMigration

worldState :: DB WorldState

clear :: DB ()

rollback :: DB a -> DB a

dbRunner :: (SpecStateM DB -> IO ()) -> IO ()
